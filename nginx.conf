events {
  worker_connections 1000;
}

http {
  upstream app {
    server app1:8081;  # app1 is accessible within Docker at port 8081
    server app2:8081;  # app2 is also accessible within Docker at port 8081
    server app3:8081;  # app3 is also accessible within Docker at port 8081
  }

  # Server block for api.ruduworld.shop
  server {
    listen 80;
    server_name api.ruduworld.shop;

    location / {
        proxy_pass http://app;  # Proxy to your backend app
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  # Server block for ruduworld.shop
  server {
    listen 80;  # Listen on port 80 for standard HTTP traffic
    server_name ruduworld.shop;

    location / {
        # Placeholder for future frontend hosting
        # For now, you can serve a static HTML file or return a placeholder message
        root /path/to/frontend;  # Path to your frontend files
        index index.html;  # Default file to serve
        # Uncomment below line if you want to return a simple text message instead
        # return 200 'Frontend service coming soon!';
    }
  }

  # Fallback server block for unmatched server names
  server {
    listen 80 default_server;
    server_name _;
    return 444;  # No response for unmatched server names
  }
}

